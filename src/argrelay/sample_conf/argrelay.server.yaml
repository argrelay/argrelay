# `argrelay` server config: https://github.com/argrelay/argrelay

connection_config:
    server_host_name: localhost
    server_port_number: 8787

mongo_config:
    use_mongomock: True
    distinct_values_query: original_find_and_loop
    mongo_client:
        # See `MongoClientConfigSchema` for detailed connection string format:
        client_connection_string: mongodb://localhost
    mongo_server:
        database_name: argrelay
        start_server: True
        # See `mongo_notes.md`:
        server_start_command: ~/argrelay.git/tmp/mongo/mongodb-linux-x86_64-rhel80-6.0.3/bin/mongod --dbpath ~/argrelay.git/tmp/mongo/data

query_cache_config:
    enable_query_cache: True
    query_cache_ttl_sec: 60
    query_cache_max_size_bytes: 10485760 # 10 MiB

gui_banner_config:

    header_html: |
        <div style="color: grey; font-size: small;">

        This is a demo GUI client for a server with mocked data.<br/>
        A GUI client cannot execute commands.<br/>
        To execute commands, use a <a href="https://github.com/argrelay/argrelay#argrelay-demo" target="_blank">CLI client</a> instead.<br/>
        <br/>
        To try auto-completion, type either|or:
        <ul>
            <li>relay_demo goto host</li>
            <li>relay_demo goto service</li>
        </ul>
        Then, narrow down search by... IP, region, etc.

        </div>

    footer_html: |
        <div style="color: grey; font-size: small;">

        <details>
        <summary>Try a <a href="https://github.com/argrelay/argrelay#argrelay-demo" target="_blank">CLI client</a> for full functionality.</summary>
        <br/>
        <h3>Details on GUI client deliberate limitations</h3>

        This test/demo GUI client allows simple browser-only access by anyone with URL (without shell access and shell config required for a CLI client).<br/>
        It is convenient for data search, testing, diagnostic, but it is not meant to be functional (use a CLI client for that).<br/>
        <br/>
        Normally, a CLI client receives equivalent responses (as this GUI client does) from the server <a href="https://github.com/argrelay/argrelay#argrelay-request-hotkeys" target="_blank">on request hotkeys<a>:
        <ol>
            <li>auto-completion options (on Tab)</li>
            <li>search responses (on Alt+Shift+Q)</li>
            <li>command invocation data (on Enter)</li>
        </ol>
        However, this GUI client is limited and slightly different from a CLI client:
        <ul>
            <li>(1) Tab is only used to complete `common_infix` - request to provide suggestions is sent automatically on idle timeout.</li>
            <li>(2) Search request (Alt+Shift+Q) is sent automatically on idle timeout.</li>
            <li>(3) Command invocation (Enter) is disabled - it only prints invocation data from the server (use a CLI client to run commands).</li>
        </ul>
        </details>

        </div>

class_to_collection_map:
    ClassCluster: ClassCluster
    ClassHost: ClassHost
    ClassService: ClassService
    access_type: access_type

server_plugin_control:
    first_interp_factory_id: FirstArgInterpFactory.default
    reusable_config_data:

        # TODO: TODO_10_72_28_05: FS_33_76_82_84: global tree (non functional yet).
        # TODO: Create schemas for each `node_type` with translator code from this tree to "legacy" structures:
        #       *   add tests of their equivalence first
        #       *   switch plugins to use it instead
        #
        #       This config is not function (not used yet) - it is a scratch board to see how this mess can be:
        #       *   put into single global view (without composing it via recursive references to plugins)
        #       *   simplified (without intermediate plugin instances performing single function but hard to follow in composition)
        # `tree_node_type`-s: their "legacy" tree name: some explanation:
        #       *   init_node: [no equivalent] : TODO: Do we need it?
        #       *   zero_arg_node: first_arg_vals_to_next_interp_factory_ids:
        #       *   interp_tree_node: interp_selector_tree:
        #       *   func_tree_node: func_selector_tree:
        #       *   tree_path_node: [no equivalent]: add extra tree level (but does nothing as the other types)
        #       *   [no equivalent]: jump_tree: `jump_path` simply becomes config of a node (no need to have separate `jump_tree`)
        #       *   [no equivalent]: tree_abs_path_to_interp_id: selecting which interp id to use simply becomes config of a node
        global_tree:
            node_type: init_node
            sub_tree:
                "relay_demo":
                    node_type: zero_arg_node
                    plugin_instance_id: InterpTreeInterpFactory.default
                    sub_tree: &interp_tree_default
                        "intercept": &intercept_invocation_func_interp_tree_node
                            node_type: interp_tree_node
                            plugin_instance_id: FuncTreeInterpFactory.intercept_invocation_func
                            next_interp:
                                jump_path:
                                    -   "relay_demo"
                                plugin_instance_id: InterpTreeInterpFactory.default
                            sub_tree:
                                "":
                                    node_type: func_tree_node
                                    func_id: intercept_invocation_func
                        "help": &help_hint_func_interp_tree_node
                            node_type: interp_tree_node
                            plugin_instance_id: FuncTreeInterpFactory.help_hint_func
                            next_interp:
                                jump_path:
                                    -   "relay_demo"
                                plugin_instance_id: InterpTreeInterpFactory.default
                            sub_tree:
                                "":
                                    node_type: func_tree_node
                                    func_id: help_hint_func
                        "enum":
                            node_type: interp_tree_node
                            plugin_instance_id: FuncTreeInterpFactory.query_enum_items_func
                            next_interp:
                                jump_path:
                                    -   "relay_demo"
                                plugin_instance_id: InterpTreeInterpFactory.default
                            sub_tree:
                                "":
                                    node_type: func_tree_node
                                    func_id: query_enum_items_func
                        "": &default_func_interp_tree_node
                            node_type: interp_tree_node
                            plugin_instance_id: FuncTreeInterpFactory.default
                            sub_tree:
                                "echo":
                                    node_type: func_tree_node
                                    func_id: echo_args_func
                                "list":
                                    node_type: tree_path_node
                                    sub_tree:
                                        "host":
                                            node_type: func_tree_node
                                            func_id: list_host_func
                                        "service":
                                            node_type: func_tree_node
                                            func_id: list_service_func
                                "goto":
                                    node_type: tree_path_node
                                    sub_tree:
                                        "repo":
                                            node_type: func_tree_node
                                            func_id: goto_git_repo_func
                                        "host":
                                            node_type: func_tree_node
                                            func_id: goto_host_func
                                        "service":
                                            node_type: func_tree_node
                                            func_id: goto_service_func
                                "desc":
                                    node_type: tree_path_node
                                    sub_tree:
                                        "tag":
                                            node_type: func_tree_node
                                            func_id: desc_git_tag_func
                                        "commit":
                                            node_type: func_tree_node
                                            func_id: desc_git_commit_func
                                        "host":
                                            node_type: func_tree_node
                                            func_id: desc_host_func
                                        "service":
                                            node_type: func_tree_node
                                            func_id: desc_service_func
                                "config":
                                    node_type: tree_path_node
                                    sub_tree:
                                        "print_with_level":
                                            node_type: func_tree_node
                                            func_id: funct_id_print_with_severity_level
                                        "print_with_exit":
                                            node_type: func_tree_node
                                            func_id: funct_id_print_with_exit_code
                                        "print_with_io_redirect":
                                            node_type: func_tree_node
                                            func_id: funct_id_print_with_io_redirect
                                        "double_execution":
                                            node_type: func_tree_node
                                            func_id: funct_id_double_execution
                        "duplicates":
                            "intercept":
                                <<: *intercept_invocation_func_interp_tree_node
                                next_interp:
                                    jump_path:
                                        -   "relay_demo"
                                        -   "duplicates"
                                    plugin_instance_id: InterpTreeInterpFactory.default
                            "help":
                                <<: *help_hint_func_interp_tree_node
                                next_interp:
                                    jump_path:
                                        -   "relay_demo"
                                        -   "duplicates"
                                    plugin_instance_id: InterpTreeInterpFactory.default
                            "": *default_func_interp_tree_node
                "some_command":
                    node_type: zero_arg_node
                    plugin_instance_id: InterpTreeInterpFactory.default
                    sub_tree: *interp_tree_default
                "service_relay_demo":
                    node_type: zero_arg_node
                    plugin_instance_id: InterpTreeInterpFactory.service
                    sub_tree:
                        <<: *help_hint_func_interp_tree_node
                        next_interp:
                            jump_path:
                                -   "service_relay_demo"
                            plugin_instance_id: InterpTreeInterpFactory.service
                        "":
                            node_type: interp_tree_node
                            plugin_instance_id: FuncTreeInterpFactory.service
                            sub_tree:
                                "goto":
                                    node_type: func_tree_node
                                    func_id: goto_service_func
                                "list":
                                    node_type: func_tree_node
                                    func_id: list_service_func
                                "desc":
                                    node_type: func_tree_node
                                    func_id: desc_service_func

        jump_tree: &jump_tree
            "relay_demo":
                "intercept":
                    -   "relay_demo"
                "help":
                    -   "relay_demo"
                "enum":
                    -   "relay_demo"
                "duplicates":
                    "intercept":
                        -   "relay_demo"
                        -   "duplicates"
                    "help":
                        -   "relay_demo"
                        -   "duplicates"
            "some_command":
                "intercept":
                    -   "some_command"
                "help":
                    -   "some_command"
                "enum":
                    -   "some_command"
                "duplicates":
                    "intercept":
                        -   "some_command"
                        -   "duplicates"
                    "help":
                        -   "some_command"
                        -   "duplicates"
            "service_relay_demo":
                "help":
                    -   "service_relay_demo"

plugin_instance_entries:

    FirstArgInterpFactory.default:
        plugin_module_name: argrelay.plugin_interp.FirstArgInterpFactory
        plugin_class_name: FirstArgInterpFactory
        plugin_dependencies:
            #   Delegators for `func_tree`:
            -   NoopDelegator.default
            -   EchoDelegator.default
            -   InterceptDelegator.default
            -   HelpDelegator.default
            -   QueryEnumDelegator.default
            -   ServiceDelegator.default
            -   GitRepoDelegator.default
            -   ConfigOnlyDelegator.default
            #   Interps for `interp_tree` per command (zero-arg):
            -   InterpTreeInterpFactory.default
            -   InterpTreeInterpFactory.service
            #   Interps for normal funcs:
            -   FuncTreeInterpFactory.default
            #   Interps for special funcs:
            -   FuncTreeInterpFactory.intercept_invocation_func
            -   FuncTreeInterpFactory.help_hint_func
            -   FuncTreeInterpFactory.query_enum_items_func
        plugin_config:
            first_arg_vals_to_next_interp_factory_ids:
                # This binding uses existing file system name `relay_demo`:
                "relay_demo": InterpTreeInterpFactory.default
                # Another equivalent binding
                # (if `some_command` is configured, it will behave as `relay_demo` above):
                "some_command": InterpTreeInterpFactory.default
                "service_relay_demo": InterpTreeInterpFactory.service
            ignored_func_ids_list:
                -   desc_git_tag_func
                -   desc_git_commit_func

    InterpTreeInterpFactory.default:
        plugin_module_name: argrelay.plugin_interp.InterpTreeInterpFactory
        plugin_class_name: InterpTreeInterpFactory
        plugin_dependencies:
            -   FuncTreeInterpFactory.intercept_invocation_func
            -   FuncTreeInterpFactory.help_hint_func
            -   FuncTreeInterpFactory.query_enum_items_func
            -   FuncTreeInterpFactory.default
        plugin_config:
            interp_selector_tree:
                "intercept": FuncTreeInterpFactory.intercept_invocation_func
                "help": FuncTreeInterpFactory.help_hint_func
                "enum": FuncTreeInterpFactory.query_enum_items_func
                "": FuncTreeInterpFactory.default
                # child "duplicates" re-plug some of the interps:
                "duplicates":
                    "intercept": FuncTreeInterpFactory.intercept_invocation_func
                    "help": FuncTreeInterpFactory.help_hint_func
                    "": FuncTreeInterpFactory.default

    InterpTreeInterpFactory.service:
        plugin_module_name: argrelay.plugin_interp.InterpTreeInterpFactory
        plugin_class_name: InterpTreeInterpFactory
        plugin_dependencies:
            -   FuncTreeInterpFactory.help_hint_func
            -   FuncTreeInterpFactory.service
        plugin_config:
            interp_selector_tree:
                "help": FuncTreeInterpFactory.help_hint_func
                "": FuncTreeInterpFactory.service

    # TODO: FS_33_76_82_84 `global_tree`: maintaining separate instance of `FuncTreeInterpFactory` plugin should be avoided.
    #       See extended comment for `FuncTreeInterpFactory.help_hint_func`.
    FuncTreeInterpFactory.intercept_invocation_func:
        plugin_module_name: argrelay.plugin_interp.FuncTreeInterpFactory
        plugin_class_name: FuncTreeInterpFactory
        plugin_config:
            jump_tree: *jump_tree
            func_selector_tree: intercept_invocation_func

    FuncTreeInterpFactory.help_hint_func:
        plugin_module_name: argrelay.plugin_interp.FuncTreeInterpFactory
        plugin_class_name: FuncTreeInterpFactory
        plugin_config:
            jump_tree: *jump_tree
            func_selector_tree: help_hint_func

    FuncTreeInterpFactory.query_enum_items_func:
        plugin_module_name: argrelay.plugin_interp.FuncTreeInterpFactory
        plugin_class_name: FuncTreeInterpFactory
        plugin_config:
            jump_tree: *jump_tree
            func_selector_tree: query_enum_items_func

    FuncTreeInterpFactory.default:
        plugin_module_name: argrelay.plugin_interp.FuncTreeInterpFactory
        plugin_class_name: FuncTreeInterpFactory
        plugin_config:
            func_selector_tree:
                "echo": echo_args_func
                "goto":
                    "repo": goto_git_repo_func
                    "host": goto_host_func
                    "service": goto_service_func
                "list":
                    "host": list_host_func
                    "service": list_service_func
                "desc":
                    "tag": desc_git_tag_func
                    "commit": desc_git_commit_func
                    "host": desc_host_func
                    "service": desc_service_func
                "config":
                    "print_with_level": funct_id_print_with_severity_level
                    "print_with_exit": funct_id_print_with_exit_code
                    "print_with_io_redirect": funct_id_print_with_io_redirect
                    "double_execution": funct_id_double_execution

    FuncTreeInterpFactory.service:
        plugin_module_name: argrelay.plugin_interp.FuncTreeInterpFactory
        plugin_class_name: FuncTreeInterpFactory
        plugin_config:
            func_selector_tree:
                "goto": goto_service_func
                "list": list_service_func
                "desc": desc_service_func

    NoopInterpFactory.default:
        plugin_module_name: argrelay.plugin_interp.NoopInterpFactory
        plugin_class_name: NoopInterpFactory

    NoopLoader.default:
        plugin_module_name: argrelay.plugin_loader.NoopLoader
        plugin_class_name: NoopLoader

    ServiceLoader.default:
        plugin_module_name: argrelay.custom_integ.ServiceLoader
        plugin_class_name: ServiceLoader
        plugin_config:
            test_data_ids_to_load:
                #-   TD_70_69_38_46  # no data
                -   TD_63_37_05_36  # demo
                # WARNING: with `mongomock` and not `enable_query_cache` requests run up for TD_38_03_48_51 may run up to 10 mins:
                #-   TD_38_03_48_51  # large generated

    GitRepoLoader.default:
        # Disabled by default because of reliance on other repos (unlike `GitRepoLoader.self`):
        plugin_enabled: false
        plugin_module_name: argrelay.custom_integ.GitRepoLoader
        plugin_class_name: GitRepoLoader
        plugin_config:
            load_git_tags_default: False
            load_git_commits_default: False
            repo_entries:
                "~/repos":
                    -
                        repo_rel_path: argrelay.git
                        envelope_properties:
                            git_repo_alias: ar
                            git_repo_content_type: code
                    -
                        repo_rel_path: mongomock.git
                        is_repo_enabled: True
                        envelope_properties:
                            git_repo_alias: mongom
                            git_repo_content_type: ref
                    -
                        repo_rel_path: marshmallow.git
                        is_repo_enabled: False
                        envelope_properties:
                            git_repo_alias: marshm
                            git_repo_content_type: code

    GitRepoLoader.self:
        # Enabled by default because it is assumed that project is git-managed:
        plugin_enabled: true
        plugin_module_name: argrelay.custom_integ.GitRepoLoader
        plugin_class_name: GitRepoLoader
        plugin_config:
            load_git_tags_default: False
            load_git_commits_default: False
            repo_entries:
                "":
                    -   repo_rel_path: ""
                        load_repo_tags: True
                        load_repo_commits: True
                        load_tags_last_days: 90
                        load_commits_max_count: 50
                        envelope_properties:
                            git_repo_alias: argrelay
                            git_repo_content_type: code

    ConfigOnlyLoader.default:
        plugin_module_name: argrelay.custom_integ.ConfigOnlyLoader
        plugin_class_name: ConfigOnlyLoader
        plugin_config:
            collection_name_to_index_fields_map:
                ConfigOnlyClass:
                    -   severity_level
                    -   exit_code
                OutputFormat:
                    -   output_format
            data_envelopes:
                !include "data/ConfigOnlyLoader.default.data.yaml"

    NoopDelegator.default:
        plugin_module_name: argrelay.plugin_delegator.NoopDelegator
        plugin_class_name: NoopDelegator

    EchoDelegator.default:
        plugin_module_name: argrelay.plugin_delegator.EchoDelegator
        plugin_class_name: EchoDelegator

    InterceptDelegator.default:
        plugin_module_name: argrelay.plugin_delegator.InterceptDelegator
        plugin_class_name: InterceptDelegator
        plugin_dependencies:
            -   FuncTreeInterpFactory.default
        plugin_config:
            tree_abs_path_to_interp_id:
                "relay_demo":
                    "intercept": InterpTreeInterpFactory.default
                    "duplicates":
                        "intercept": InterpTreeInterpFactory.default
                "some_command":
                    "intercept": InterpTreeInterpFactory.default
                    "duplicates":
                        "intercept": InterpTreeInterpFactory.default
                "service_relay_demo":
                    "help": InterpTreeInterpFactory.service

    HelpDelegator.default:
        plugin_module_name: argrelay.plugin_delegator.HelpDelegator
        plugin_class_name: HelpDelegator
        plugin_dependencies:
            -   FuncTreeInterpFactory.default
        plugin_config:
            tree_abs_path_to_interp_id:
                "relay_demo":
                    "help": InterpTreeInterpFactory.default
                    "duplicates":
                        "help": InterpTreeInterpFactory.default
                "some_command":
                    "help": InterpTreeInterpFactory.default
                    "duplicates":
                        "help": InterpTreeInterpFactory.default
                "service_relay_demo":
                    "help": InterpTreeInterpFactory.service

    QueryEnumDelegator.default:
        plugin_module_name: argrelay.plugin_delegator.QueryEnumDelegator
        plugin_class_name: QueryEnumDelegator
        plugin_dependencies:
            -   FuncTreeInterpFactory.default
        plugin_config:
            tree_abs_path_to_interp_id:
                "relay_demo":
                    "enum": InterpTreeInterpFactory.default
                "some_command":
                    "enum": InterpTreeInterpFactory.default
                "service_relay_demo":
                    "help": InterpTreeInterpFactory.service

    ServiceDelegator.default:
        plugin_module_name: argrelay.custom_integ.ServiceDelegator
        plugin_class_name: ServiceDelegator

    GitRepoDelegator.default:
        plugin_module_name: argrelay.custom_integ.GitRepoDelegator
        plugin_class_name: GitRepoDelegator

    ConfigOnlyDelegator.default:
        plugin_module_name: argrelay.custom_integ.ConfigOnlyDelegator
        plugin_class_name: ConfigOnlyDelegator
        plugin_config:
            # TODO_84_71_86_21: change to realistic examples:
            func_configs:
                funct_id_print_with_severity_level:
                    func_envelope:
                        HelpHint: "Example: instantiate command template by data from `data_envelope` and executed it: print `text_message` prefixed with `severity_level`"
                        instance_data:
                            search_control_list:
                                -
                                    collection_name: ConfigOnlyClass
                                    envelope_class: ConfigOnlyClass
                                    keys_to_types_list:
                                        -   level: severity_level
                                        -   code: exit_code
                        envelope_payload:
                            command_template: "echo \"{envelope_containers[1].data_envelopes[0]['severity_level']}: {envelope_containers[1].data_envelopes[0]['envelope_payload']['text_message']}\""
                            echo_command_on_stderr: True
                funct_id_print_with_exit_code:
                    func_envelope:
                        HelpHint: "Example: instantiate command template by data from `data_envelope` and executed it: print `text_message` and exit with `exit_code`"
                        instance_data:
                            search_control_list:
                                -
                                    collection_name: ConfigOnlyClass
                                    envelope_class: ConfigOnlyClass
                                    keys_to_types_list:
                                        -   level: severity_level
                                        -   code: exit_code
                        envelope_payload:
                            command_template: |
                                echo \"{envelope_containers[1].data_envelopes[0]['envelope_payload']['text_message']}\"
                                exit {envelope_containers[1].data_envelopes[0]['exit_code']}
                funct_id_print_with_io_redirect:
                    func_envelope:
                        HelpHint: "Example: instantiate command template by data from `data_envelope` and executed it: print `text_message` on stdout or stderr based on exit code"
                        instance_data:
                            search_control_list:
                                -
                                    collection_name: ConfigOnlyClass
                                    envelope_class: ConfigOnlyClass
                                    keys_to_types_list:
                                        -   level: severity_level
                                        -   code: exit_code
                        envelope_payload:
                            command_template: |
                                if [[ {envelope_containers[1].data_envelopes[0]['exit_code']} -eq 0 ]]
                                then
                                    echo \"{envelope_containers[1].data_envelopes[0]['envelope_payload']['text_message']}\" 1>&1
                                else
                                    echo \"{envelope_containers[1].data_envelopes[0]['envelope_payload']['text_message']}\" 1>&2
                                fi
                                exit {envelope_containers[1].data_envelopes[0]['exit_code']}
                funct_id_double_execution:
                    fill_control_list:
                        # 0th = func container:
                        -   { }
                        # 1st container:
                        -   { }
                        # 2nd container:
                        -
                            severity_level: "{envelope_containers[1].data_envelopes[0]['severity_level']}"
                            exit_code: "{envelope_containers[1].data_envelopes[0]['exit_code']}"
                    func_envelope:
                        HelpHint: "Example: take two command templates and execute them: print `text_message` prefixed with `severity_level` and print exit code (without using it for exit)"
                        instance_data:
                            search_control_list:
                                -
                                    collection_name: ConfigOnlyClass
                                    envelope_class: ConfigOnlyClass
                                    keys_to_types_list:
                                        -   level: severity_level
                                        -   code: exit_code
                                -
                                    collection_name: ConfigOnlyClass
                                    envelope_class: ConfigOnlyClass
                                    keys_to_types_list:
                                        -   level: severity_level
                                        -   code: exit_code
                        envelope_payload:
                            command_template: |
                                echo \"{envelope_containers[1].data_envelopes[0]['severity_level']}: exit_code={envelope_containers[1].data_envelopes[0]['exit_code']}: {envelope_containers[1].data_envelopes[0]['envelope_payload']['text_message']}\"
                                echo \"{envelope_containers[2].data_envelopes[0]['severity_level']}: exit_code={envelope_containers[2].data_envelopes[0]['exit_code']}: {envelope_containers[2].data_envelopes[0]['envelope_payload']['text_message']}\"
                            echo_command_on_stderr: False

    # TODO: Add FS_80_45_89_81 / `error_message` func:
    ErrorDelegator.default:
        plugin_module_name: argrelay.plugin_delegator.ErrorDelegator
        plugin_class_name: ErrorDelegator

    DefaultConfigurator.default:
        plugin_module_name: argrelay.plugin_config.DefaultConfigurator
        plugin_class_name: DefaultConfigurator
        plugin_config:
            project_title: "relay_demo"
            project_page_url: "https://argrelay.org"
            git_files_by_commit_id_url_prefix: "https://github.com/argrelay/argrelay/tree/"
            commit_id_url_prefix: "https://github.com/argrelay/argrelay/commit/"
