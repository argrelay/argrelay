# This is an `argrelay` server config.
# To test, symlink this files as user dot file - see `dev-shell.bash` script.

connection_config:
    server_host_name: localhost
    server_port_number: 8787

mongo_config:
    use_mongomock_only: True
    mongo_client:
        # See `MongoClientConfigSchema` for detailed connection string format:
        client_connection_string: mongodb://localhost
    mongo_server:
        database_name: argrelay
        start_server: True
        # See `mongo_notes.md`:
        server_start_command: ~/argrelay.git/temp/mongo/mongodb-linux-x86_64-rhel80-6.0.3/bin/mongod --dbpath ~/argrelay.git/temp/mongo/data

plugin_id_load_list:

    -   FirstArgInterpFactory
    -   DemoInterpFactory

    -   NoopLoader
    -   ServiceLoader
    -   GitRepoLoader

    -   NoopInvocator
    -   GitRepoInvocator
    -   ErrorInvocator

plugin_dict:
    FirstArgInterpFactory:
        plugin_module_name: argrelay.plugin_interp.FirstArgInterpFactory
        plugin_class_name: FirstArgInterpFactory
        plugin_type: InterpFactoryPlugin
        plugin_config:
            first_arg_vals_to_next_interp_factory_ids:
                # This binding uses existing file system name `relay_demo`:
                relay_demo: DemoInterpFactory
                # Another equivalent binding (but `some_command` does not exist in this repo):
                some_command: DemoInterpFactory

    DemoInterpFactory:
        plugin_module_name: argrelay.custom_integ.DemoInterpFactory
        plugin_class_name: DemoInterpFactory
        plugin_type: InterpFactoryPlugin
        plugin_config:
            function_search_control:
                envelope_class: ClassFunction
                keys_to_types_list:
                    -   action: ActionType
                    -   selector: ObjectSelector

    NoopLoader:
        plugin_module_name: argrelay.misc_helper.NoopLoader
        plugin_class_name: NoopLoader
        plugin_type: LoaderPlugin
        plugin_config: { }

    ServiceLoader:
        plugin_module_name: argrelay.custom_integ.ServiceLoader
        plugin_class_name: ServiceLoader
        plugin_type: LoaderPlugin
        plugin_config:
            test_data_ids_to_load:
                #-   TD_70_69_38_46  # no data
                -   TD_63_37_05_36  # demo
                #-   TD_38_03_48_51  # large generated

    GitRepoLoader:
        plugin_module_name: argrelay.custom_integ.GitRepoLoader
        plugin_class_name: GitRepoLoader
        plugin_type: LoaderPlugin
        plugin_config:
            is_plugin_enabled: False
            base_path: "~/repos"

    NoopInvocator:
        plugin_module_name: argrelay.plugin_invocator.NoopInvocator
        plugin_class_name: NoopInvocator
        plugin_type: InvocatorPlugin
        plugin_config: { }

    GitRepoInvocator:
        plugin_module_name: argrelay.custom_integ.GitRepoInvocator
        plugin_class_name: GitRepoInvocator
        plugin_type: InvocatorPlugin
        plugin_config: { }

    ErrorInvocator:
        plugin_module_name: argrelay.plugin_invocator.ErrorInvocator
        plugin_class_name: ErrorInvocator
        plugin_type: InvocatorPlugin
        plugin_config: { }

# Statically defined `static_data` - and it is not a tautology!
# This data is loaded as part of the config on start (and will be available even when all loader plugins removed).
# Loader plugins are also supposed to add more data (but they also can modify or completely remove it).
static_data:

    first_interp_factory_id: FirstArgInterpFactory

    known_arg_types: [ ]

    data_envelopes: [ ]
